import re

date_regex = re.compile(r'^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\d\d$' # match mm/dd/yyyy
                        r'|'
                        r'^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\d\d$' # match dd-mm-yyyy
                        r'|'
                        r'^([^\s]+) (\d{2}),? ?(\d{4})$' # match Month D, Yr (i.e. February 17, 2009 or February 17,2009)
                        r'|'
                        r'^\d{4}$' # match year (i.e. 2011)
                            r'|'
                        'Fiscal\d{4}'
                        r'|'
                        r'^Change$'
                        r'|'
                        r'(\b\d{1,2}\D{0,3})?\b(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|(Nov|Dec)(?:ember)?)\D?(\d{1,2}\D?)?\D?((19[7-9]\d|20\d{2})|\d{2})')

balance_sheet_regex = r'Consolidated(.*?)(balance sheet|condition)'
cash_flow_statement_regex = r'Consolidated(.*?)cash flow'
income_statement_regex = r'Consolidated(.*?)statements of earnings'

cash_flow_investing_activities = {

    # Plant, Property, and Equipment
    'Payments to Acquire Productive Assets': re.compile(r'Capital expenditures – excluding equipment leased to others', re.IGNORECASE),
    'Payments to Acquire Equipment on Lease': re.compile(r'Expenditures for equipment leased to others', re.IGNORECASE),
    'Payments to Acquire Property, Plant, and Equipment': re.compile(r'(Purchase(s?) of property[ ?](, leasehold improvements )?and equipment)'
                                                                     r'|'
                                                                     r'(Payments for acquisition of property, plant and equipment)', re.IGNORECASE),
    'Proceeds from Sale of Property, Plant, and Equipment': re.compile(r'Proceeds from disposals of leased assets and property, plant and equipment', re.IGNORECASE),

    # Loans and Leases
    'Issuance Short Term Loans To Subsidiaries Net': re.compile(r'', re.IGNORECASE),
    'Payments for (Proceeds from) Loans and Leases': re.compile(r'Loans, net \(excluding loans held for sale\)', re.IGNORECASE),

    # Business Acquisitions
    'Payments to Acquire Businesses, Net of Cash Acquired': re.compile(r'(Investments and acquisitions \(net of cash acquired\))'
                                                                       r'|'
                                                                       r'Payments made in connection with business acquisitions, net', re.IGNORECASE),
    'Proceeds from divestiture of businesses net of cash divested': re.compile(r'Proceeds from sale of businesses and investments \(net of cash sold\)', re.IGNORECASE),

    # Finance Receivables
    'Payments to acquire finance receivables': re.compile(r'Additions to finance receivables', re.IGNORECASE),
    'Proceeds from collection of finance receivables': re.compile(r'Collections of finance receivables', re.IGNORECASE),
    'Proceeds from sale of finance receivables': re.compile(r'Proceeds from sale of finance receivables', re.IGNORECASE),

    # Marketable Securities
    'Marketable Securities': {
        'Payments to Acquire Marketable Securities': re.compile(r'(Purchases of|Investments in)( marketable?) securities', re.IGNORECASE),
        'Proceeds from sale and maturity of marketable securities': {
            'Proceeds from Sale of Debt Securities, Available-for-sale': re.compile(r'(Proceeds from )?sale(s?) of( marketable?) securities', re.IGNORECASE),
            'Proceeds from Maturities, Prepayments and Calls of Debt Securities, Available-for-sale': re.compile(r'(Proceeds from )?Maturities of marketable securities', re.IGNORECASE)
        }
    },

    # Investments
    'Proceeds from Sale of Investment Projects': re.compile(r'Purchase of investments', re.IGNORECASE),
    'Payments to Acquire Investments': re.compile(r'Proceeds from sales and paydowns of investments', re.IGNORECASE),

    # Other
    'Payments to Acquire Other Investments': re.compile(r'', re.IGNORECASE),
    'Proceeds from Sale and Maturity of Other Investments': re.compile(r'', re.IGNORECASE),

    'Payments for (Proceeds from) Other Investing Activities': re.compile(r'Other( – net)?', re.IGNORECASE),
    'Net Cash Provided by (Used in) Investing Activities': re.compile(r'(Net cash provided by \(used for\) investing activities) |'
                                                                      r'(Cash generated by/\(used in\) investing activities)', re.IGNORECASE)
}

cash_flow_operating_activities = {
    'Net Income (Loss)': re.compile(r'(Net Earnings)|(Profit \(loss\) of consolidated and affiliated companies)', re.IGNORECASE),
    'Adjustments for non-cash items': {
        'Depreciation, Depletion and Amortization, Nonproduction': re.compile(r'Depreciation and amortization', re.IGNORECASE),
        'DefinedBenefitPlanActuarialGainLoss': re.compile(r'Actuarial \(gain\) loss on pension and postretirement benefits', re.IGNORECASE),
        'Deferred Income Tax Expense (Benefit)': re.compile(r'(Provision \(benefit\) for )?deferred income taxes', re.IGNORECASE),
        'Share-based Compensation': re.compile(r'Share-based compensation', re.IGNORECASE),
        'Gain (Loss) on Extinguishment of Debt': re.compile(r'Gain related to extinguishment of unsecured borrowings', re.IGNORECASE),
        'Provision for Loan, Lease, and Other Losses': re.compile(r'Provision for credit losses', re.IGNORECASE),
        'OtherNoncashIncomeExpense': re.compile(r'Other', re.IGNORECASE)
    },
    'Changes in assets, net of acquisitions and diverstitures': {
        'Increase (Decrease) in Receivables': re.compile(r'Receivables', re.IGNORECASE),
        'Increase (Decrease) in Inventories': re.compile(r'Inventories', re.IGNORECASE),
        'Increase (Decrease) in Other Operating Assets': re.compile(r'Other assets – net', re.IGNORECASE),
    },
    'Changes in liabilities, net of acquisitions and diverstitures': {
        'Increase (Decrease) in Accounts Payable': re.compile(r'Accounts payable', re.IGNORECASE),
        'Increase (Decrease) in Accrued Liabilities': re.compile(r'Accrued expenses', re.IGNORECASE),
        'Increase (Decrease) in Employee Related Liabilities': re.compile(r'Accrued wages, salaries and employee benefits', re.IGNORECASE),
        'Increase (Decrease) in Customer Advances': re.compile(r'Customer advances', re.IGNORECASE),
        'Increase (Decrease) in Other Operating Liabilities': re.compile(r'Other liabilities – net', re.IGNORECASE)
    },
    'Net Cash Provided by (Used in) Operating Activities': re.compile(r'Net cash provided by \(used for\) operating activities', re.IGNORECASE),

}

cash_flow_financing_activities = {

}

financial_entries_regex_dict = {
    'Balance Sheet': {
        'Assets': {
            'Current Assets': {
                'Cash and Short Term Investments': {
                    'Cash and Cash Equivalents': re.compile(r'({}|Current Assets)(.*?)Cash and cash equivalents(.*?)(?!^Marketable Securities$)'.format(balance_sheet_regex), re.IGNORECASE),
                    'Marketable Securities Current': re.compile(r'({}|Current Assets)(.*?)Short-term marketable securities'.format(balance_sheet_regex), re.IGNORECASE),
                    'Cash and Short Term Investments': re.compile(r'{}|Current Assets(.*?)Cash and short-term investments', re.IGNORECASE)
                },
                'Accounts Receivable': {
                    'Gross Accounts Receivable': 0,
                    'Allowances for Doubtful Accounts': re.compile(r'{}(.*?)net of allowances of \$(\d+)'.format(balance_sheet_regex), re.IGNORECASE), # TODO extract
                    'Net Accounts Receivable': re.compile(r'Receivable'.format(balance_sheet_regex), re.IGNORECASE),
                },
                'Prepaid Expense, Current': re.compile(r'Prepaid expenses', re.IGNORECASE),
                'Inventory, Net': re.compile(r'Inventor(y|ies)'.format(balance_sheet_regex), re.IGNORECASE),
                'Income Taxes Receivable, Current': re.compile(r'Income taxes receivable', re.IGNORECASE),

                # taxes that have been already paid despite not yet having been incurred
                'Deferred Tax Assets, Current': re.compile(r'(Deferred tax assets)|(Prepaid taxes)'.format(balance_sheet_regex), re.IGNORECASE),

                'Nontrade Receivables, Current': re.compile(r'(?!^non-?current$)(.*?)(Vendor non-trade receivables)(.*?)(?!^non-?current$)', re.IGNORECASE),
                'Other Assets, Current': 0,
                'Total Assets, Current': re.compile(r'Total current assets'.format(balance_sheet_regex), re.IGNORECASE)
            },
            'Non Current Assets': {
                # TODO marketable securities wrong
                'Marketable Securities Non Current': re.compile(r'{}(.*?)((long-?term)|non-?current) (marketable securities)'
                                                                r'|'
                                                                r'Investments'.format(balance_sheet_regex), re.IGNORECASE),
                'Property, Plant and Equipment': {
                    'Gross Property, Plant and Equipment': re.compile(r'Property(.*?)Plant(.*?)Equipment(.*?)Gross', re.IGNORECASE),
                    'Accumulated Depreciation and Amortization': re.compile(r'Depreciation(.*?)Amortization', re.IGNORECASE),
                    'Property, Plant and Equipment, Net': re.compile(r'Property(.*?)Plant(.*?)Equipment(.*?)Net', re.IGNORECASE),
                },
                'Deferred Tax Assets Non Current': re.compile(r'Noncurrent deferred tax assets', re.IGNORECASE),
                'Intangible Assets': {
                    'Goodwill': re.compile(r'(({}|Intangible Assets)(.*?)Goodwill)'.format(balance_sheet_regex), re.IGNORECASE),
                    'Other Intangible Assets': 0,
                    'Total Intangible Assets': re.compile(r'{}(.*?)Intangible Assets(.*?)(?!^Goodwill$)'.format(balance_sheet_regex), re.IGNORECASE),
                },
                'Other Non Current Assets': 0,
                'Total Non Current Assets': 0,
            },
            'Total Assets': re.compile(r'Total ?(?!^Current$) ?Assets', re.IGNORECASE)
        },
        'Liabilities and Shareholders\' Equity': {
            'Liabilities': {
                'Current Liabilities': {
                    'Short-Term Debt': re.compile(r'({}|Current Liabilities)(.*?)(Commercial Paper)'.format(balance_sheet_regex), re.IGNORECASE),
                    'Long-term Debt, Current Maturities': re.compile(r'Current Liabilities(.*?)(Term Debt)'.format(balance_sheet_regex), re.IGNORECASE),
                    'Accounts Payable, Current': re.compile(r'^(?=.*Accounts Payable)(?!(?=.*non-?current)).*$'.format(balance_sheet_regex), re.IGNORECASE),
                    'Accounts Payable, Trade, Current': re.compile(r'Current Liabilities(.*?)(Partners Payable)'.format(balance_sheet_regex), re.IGNORECASE),
                    'Operating Lease, Liability, Current': re.compile(r'Current Liabilities(.*?)(Operating lease liabilities, current)'.format(balance_sheet_regex), re.IGNORECASE),
                    'Current Deferred Revenues': re.compile(r'({}|Current Liabilities)(.*?)(Deferred Revenue)'.format(balance_sheet_regex), re.IGNORECASE),
                    'Accrued Liabilities, Current': re.compile(r'Accrued (expenses|liabilities)'.format(balance_sheet_regex), re.IGNORECASE),
                    'Income Taxes Payable': re.compile(r'Income taxes payable', re.IGNORECASE),
                    'Other Current Liabilities': 0,
                    'Total Current Liabilities': re.compile(r'({}|Current Liabilities)(.*?)(Total Current Liabilities)'.format(balance_sheet_regex), re.IGNORECASE),
                },
                'Non Current Liabilities': {
                    'Deferred Tax Liabilities': 0,
                    # this debt is due after one year in contrast to current maturities which are due within this year
                    'Long-term Debt, Noncurrent Maturities': re.compile(r'(Long-term debt(,*?)(after))', re.IGNORECASE),
                    'Operating Lease, Liability, Noncurrent': re.compile(r'({}(.*?)(Operating lease liabilities, non-current))'.format(balance_sheet_regex), re.IGNORECASE),
                    'Other Liabilities, Noncurrent': re.compile(r'^(?=.*other)(?=.*liabilities)(?!(?=.*current)).*$', re.IGNORECASE),
                    'Total Long-Term Liabilities': 0
                },
                'Total Liabilities': re.compile(r'Total Liabilities', re.IGNORECASE)
            },
            'Shareholders\' Equity': {
                'Common Stock, Value, Issued': re.compile(r'Common stock', re.IGNORECASE),
                'Additional Paid in Capital': re.compile(r'Additional paid-in capital', re.IGNORECASE),
                'Treasury Stock, Value': re.compile(r'Treasury stock', re.IGNORECASE),
                'Retained Earnings (Accumulated Deficit)': re.compile(r'(Accumulated deficit)|(Retained earnings)', re.IGNORECASE),
                'Accumulated Other Comprehensive Income': re.compile(r'CAccumulated other comprehensive income', re.IGNORECASE),
                'Stockholders\' Equity Attributable to Parent': re.compile(r'Common stock', re.IGNORECASE),
                # TODO figure out how to process this edge case
                'Minority Interest': re.compile(r'Noncontrolling interests', re.IGNORECASE),
                'Stockholders\' Equity, Including Portion Attributable to Noncontrolling Interest': re.compile(r'Total Equity', re.IGNORECASE),
            },
            'Total Liabilities and Shareholders\' Equity': re.compile(r'Total Liabilities and Equity', re.IGNORECASE)
        },
    },
    'Income Statement': {
        'Revenues': {
            'Net Sales': re.compile(r'(Net|Product) sales', re.IGNORECASE),
            'Gross Margin': re.compile(r'Gross margin', re.IGNORECASE)
        },
        'Cost of Goods and Services Sold': re.compile(r'Cost of (goods sold|sales)', re.IGNORECASE),
        'Operating Expenses': {
            'Research and Development': re.compile(r'Research and development', re.IGNORECASE),
            'Selling, General and Administrative': re.compile(r'Selling, general and administrative', re.IGNORECASE),
            'Total Operating Expenses': re.compile(r'Total operating expenses', re.IGNORECASE)
        },
        'Operating Income (Loss) / EBIT': re.compile(r'Operating income'),
        'Non-Operating Income (Expenses)': 0,
        'Net Income (Loss)': 0,
        'Net Income Loss Attributable to Noncontrolling Interest': 0
    },
    'Cash Flow Statement': {
        'Operating Activities': re.compile(r'{}(.*?)Operating activities:(.*?)'.format(cash_flow_statement_regex), re.IGNORECASE),
        'Investing Activities': re.compile(r'{}(.*?)Investing activities:(.*?)'.format(cash_flow_statement_regex), re.IGNORECASE),
        'Financing Activities': re.compile(r'{}(.*?)Financing activities:(.*?)'.format(cash_flow_statement_regex), re.IGNORECASE),
    }
}
